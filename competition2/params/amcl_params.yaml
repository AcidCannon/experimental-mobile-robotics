# minimum allowed number of particles
min_particles: 5000 # 500
# maximum allowed number of particles
max_particles: 10000 # 2000
# maximum error between the true distribution and the estimated distribution
kld_err: 0.01
# upper standard normal quantile for (1 - p), where p is the probability that the error on the estimated distrubition will be less than kld_err
kld_z: 0.99

# translational movement required before performing a filter update (meters)
update_min_d: 0.1
# rotational movement required before performing a filter update (radians)
update_min_a: 0.1

# number of filter updates required before resampling
resample_interval: 1

# time with which to post-date the transform that is published, to indicate that this transform is valid into the future
transform_tolerance: 1.0

# exponential decay rate for the slow average weight filter, used in deciding when to recover by adding random poses
recovery_alpha_slow: 0.0 # recommended value 0.001
# exponential decay rate for the fast average weight filter, used in deciding when to recover by adding random poses
recovery_alpha_fast: 0.0 # recommend value 0.1

# maximum rate (Hz) at which scans and paths are published for visualization
gui_publish_rate: 10.0
# when set to true, AMCL will subscribe to the map topic rather than making a service call to receive its map
use_map_topic: true

# maximum scan range to be considered; -1.0 will cause the laser's reported maximum range to be used
laser_max_range: -1.0 # TODO
# how many evenly-spaced beams in each scan to be used when updating the filter
laser_max_beams: 60

# mixture weight for the z_hit part of the model
laser_z_hit: 0.5
# mixture weight for the z_short part of the model
laser_z_short: 0.05
# mixture weight for the z_max part of the model
laser_z_max: 0.05
# mixture weight for the z_rand part of the model
laser_z_rand: 0.5

# standard deviation for Gaussian model used in z_hit part of the model
laser_sigma_hit: 0.2
# exponential decay parameter for z_short part of model
laser_lambda_short: 0.1
# which model to use, either beam, likelihood_field, or likelihood_field_prob (same as likelihood_field but incorporates the beamskip feature, if enabled)
laser_model_type: likelihood_field
# maximum distance to do obstacle inflation on map
laser_likelihood_max_dist: 2.0

# which model to use, either "diff", "omni", "diff-corrected" or "omni-corrected"
odom_model_type: diff
# specifies the expected noise in odometry's rotation estimate from the rotational component of the robot's motion
odom_alpha1: 0.2
# specifies the expected noise in odometry's rotation estimate from translational component of the robot's motion
odom_alpha2: 0.2
# specifies the expected noise in odometry's translation estimate from the translational component of the robot's motion
odom_alpha3: 0.2
# specifies the expected noise in odometry's translation estimate from the rotational component of the robot's motion
odom_alpha4: 0.2

odom_frame_id: odom
base_frame_id: base_footprint
global_frame_id: map
